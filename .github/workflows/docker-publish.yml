name: Build & Publish Multi-Arch Docker Image

on:
  push:
    branches:
      - main
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check_skip:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: skip_check
        run: |
          if git log -1 --pretty=%B | grep -q "\[skip_build\]"; then
            echo "should_skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_skip=false" >> "$GITHUB_OUTPUT"
          fi

  tag:
    needs: check_skip
    if: |
      github.event_name == 'push' &&
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
      needs.check_skip.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    outputs:
      repo_version: ${{ steps.version.outputs.repo_version }}
      docker_version: ${{ steps.version.outputs.docker_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version info
        id: version
        run: |
          source .dev/versions.env
          echo "repo_version=${REPO_VERSION}" >> "$GITHUB_OUTPUT"
          echo "docker_version=${UHF_VERSION}-ffmpeg${FFMPEG_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -f "${{ steps.version.outputs.repo_version }}"
          git push -f origin "${{ steps.version.outputs.repo_version }}"

  docker:
    needs: tag
    if: |
      github.event_name == 'push' &&
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
      needs.check_skip.outputs.should_skip != 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version info
        run: |
          source .dev/versions.env
          echo "REPO_VERSION=${REPO_VERSION}" >> $GITHUB_ENV
          echo "UHF_VERSION=${UHF_VERSION}" >> $GITHUB_ENV
          echo "FFMPEG_VERSION=${FFMPEG_VERSION}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.uhf
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            solidpixel/uhf-server:latest
            solidpixel/uhf-server:${{ env.UHF_VERSION }}-ffmpeg${{ env.FFMPEG_VERSION }}
            solidpixel/uhf-server:${{ env.UHF_VERSION }}-ffmpeg${{ env.FFMPEG_VERSION }}-${{ env.REPO_VERSION }}
